define("mod_otopo/items/components/degree",["mod_otopo/items/store","mod_otopo/items/ajax","mod_otopo/utils","core/log"],(function(e,t,n,i){return{props:{item:{type:Object},itemIndex:{type:Number},degree:{type:Object},index:{type:Number}},data:function(){return{errors:[],strings:this.$root.$data.strings,hasOtopo:this.$root.$data.hasOtopo,cmid:this.$root.$data.cmid,processChange:n.debounce((()=>this.saveDegree())),validated:!1,creationPending:!1,collapsed:!1,state:this.$root.$data.state}},mounted:function(){this.$refs.name.focus()},methods:{deleteDegree(n){n.preventDefault(),!this.hasOtopo&&(e.deleteDegreeFromItem(this.item,this.index),t.deleteDegree(this.degree.id,this.cmid))},saveDegree(){if(this.validated=!0,this.$refs.formDegree.checkValidity()){const e={...this.degree};e.id?t.editDegree(e,this.cmid):!this.creationPending&&(this.creationPending=!0,delete e.id,t.createDegree(this.item.id,e,this.cmid).then((e=>(this.degree.id=e,this.creationPending=!1,!0))).catch(i.error))}},startDrag(t,n,i){!this.hasOtopo&&(t.dataTransfer.dropEffect="move",t.dataTransfer.effectAllowed="move",t.dataTransfer.setData("degreeIndex",i),t.dataTransfer.setData("itemIndex",n),e.startDraggingDegree())},endDrag(){e.stopDraggingDegree()},onDrop(n,d){if(n.preventDefault(),!this.hasOtopo){const s=parseInt(n.dataTransfer.getData("degreeIndex")),o=parseInt(n.dataTransfer.getData("itemIndex")),g=d?s+1:s,l=d?this.index:this.index+1;if(o===this.itemIndex&&s!=this.index&&g!=l||o!==this.itemIndex){var r=e.deleteDegreeFromItem(this.$root.$data.state.items[o],s);if(r.ord=d?this.degree.ord:this.degree.ord+1,e.addDegreeToItemAfter(this.index,this.item,r).forEach((e=>{e.id&&t.editDegree(e,this.cmid)})),r.id)if(o!==this.itemIndex){t.deleteDegree(r.id,this.cmid);var a={...r};delete a.id,t.createDegree(this.item.id,a,this.cmid).then((t=>(e.degreeCreated(r,t),!0))).catch(i.error)}else t.editDegree(r,this.cmid)}}},collapse(e){e.preventDefault(),this.collapsed=!this.collapsed}},computed:{isDragging(){return this.state.draggingDegree}},template:'\n            <div class="degree">\n                <div\n                    class="drop-zone"\n                    v-bind:class="{\'bg-otopo-light\': isDragging}"\n                    @dragover.prevent\n                    @dragenter.prevent\n                    @drop="onDrop($event, true)">\n                </div>\n                <form ref="formDegree" v-bind:class="{ \'was-validated\': validated }">\n                    <div\n                        class="row border rounded bg-white mb-2 pt-2"\n                    >\n                        <div\n                            class="col-md-12"\n                            draggable\n                            @dragstart="startDrag($event, itemIndex, index)"\n                            @dragend="endDrag"\n                        >\n                            <a class="dropdown-toggle nav-link drag-title" href="#" v-on:click="collapse">\n                                <i class="icon fa fa-arrows"></i>\n                                <label\n                                    class="font-weight-bold text-dark"\n                                    :for="\'item_\' + itemIndex + \'_degree_name_\' + index"\n                                >\n                                    {{strings.degree}} {{index+1}}\n                                </label>\n                            </a>\n                        </div>\n                        <div class="col-md-9" v-if="!collapsed">\n                            <div class="input-group mb-3">\n                                <input\n                                    v-model="degree.name"\n                                    class="form-control"\n                                    ref="name"\n                                    type="text"\n                                    maxlength="255"\n                                    :title="strings.stringlimit255"\n                                    :id="\'item_\' + itemIndex + \'_degree_name_\' + index"\n                                    @input="processChange()"\n                                    :disabled="creationPending"\n                                    required\n                                >\n                            </div>\n                            <div class="input-group mb-3">\n                                <textarea\n                                    v-model="degree.description"\n                                    class="form-control"\n                                    type="text" :id="\'item_\' + itemIndex + \'_degree_description_\' + index"\n                                    @input="processChange()"\n                                    :disabled="creationPending"\n                                ></textarea>\n                            </div>\n                        </div>\n                        <div class="col-md-3" v-if="!collapsed">\n                            <label\n                                class="font-weight-bold text-dark"\n                                :for="\'item_\' + itemIndex + \'_degree_grade_\' + index"\n                            >\n                                {{strings.degreegrade}}\n                            </label>\n                            <div class="input-group mb-3">\n                                <input\n                                    v-model="degree.grade"\n                                    class="form-control"\n                                    type="text" :id="\'item_\' + itemIndex + \'_degree_grade_\' + index"\n                                    @input="processChange()"\n                                    :disabled="creationPending || hasOtopo"\n                                    required\n                                >\n                            </div>\n                        </div>\n                        <div class="col-md-12" v-if="!collapsed">\n                            <a\n                            v-on:click="deleteDegree"\n                            class="mb-3 d-inline-block"\n                            v-bind:class="{\'disabled\': hasOtopo}"\n                            href="#" >- {{ strings.deletedegree }}\n                            </a>\n                        </div>\n                    </div>\n                </form>\n                <div\n                    class="drop-zone"\n                    v-bind:class="{\'bg-otopo-light\': isDragging}"\n                    @dragover.prevent\n                    @dragenter.prevent\n                    @drop="onDrop($event, false)">\n                </div>\n            </div>\n        '}}));

//# sourceMappingURL=degree.min.js.map