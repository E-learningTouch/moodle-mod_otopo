{"version":3,"file":"item.min.js","sources":["../../../src/items/components/item.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Items vue item.\n *\n * @copyright   2024 Nantes Universit√© <support-tice@univ-nantes.fr> (Commissioner)\n * @copyright   2024 E-learning Touch' <contact@elearningtouch.com> (Maintainer)\n * @copyright   2022 Kosmos <moodle@kosmos.fr> (Former maintainer)\n * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'mod_otopo/items/store',\n    'mod_otopo/items/ajax',\n    'mod_otopo/items/components/degree',\n    'mod_otopo/color',\n    'mod_otopo/utils',\n    'core/log'\n], function(\n    store,\n    ajax,\n    Degree,\n    ColorPicker,\n    utils,\n    Log\n) {\n    return {\n        components: {\n            'Degree': Degree,\n            'ColorPicker': ColorPicker\n        },\n        props: {\n            otopo: {\n                type: Number\n            },\n            item: {\n                type: Object\n            },\n            index: {\n                type: Number\n            }\n        },\n        mounted: function() {\n            this.$refs.name.focus();\n        },\n        data: function() {\n            return {\n                nbr: this.item.degrees.length,\n                strings: this.$root.$data.strings,\n                hasOtopo: this.$root.$data.hasOtopo,\n                cmid: this.$root.$data.cmid,\n                processChange: utils.debounce(() => this.saveItem()),\n                validated: false,\n                creationPending: false,\n                collapsed: false,\n                state: this.$root.$data.state\n            };\n        },\n        methods: {\n            deleteItem() {\n                if (!this.hasOtopo) {\n                    store.deleteItem(this.index);\n                    ajax.deleteItem(this.item.id, this.cmid);\n                }\n            },\n            duplicateItem(e) {\n                e.preventDefault();\n                if (!this.hasOtopo) {\n                    const item = {...this.item};\n                    item.degrees = [];\n                    this.item.degrees.forEach((degree) => {\n                        item.degrees.push({...degree});\n                    });\n                    delete item.id;\n                    item.degrees.forEach((degree) => {\n                        delete degree.id;\n                    });\n                    item.ord = this.item.ord + 1;\n                    var itemsToPersist = store.addItemAfter(this.index, item);\n                    itemsToPersist.forEach((item) => {\n                        if (item.id) {\n                            var itemToPersist = {...item};\n                            delete itemToPersist.degrees;\n                            ajax.editItem(itemToPersist, this.cmid);\n                        }\n                    });\n                    const itemToCreate = {...item};\n                    delete itemToCreate.degrees;\n                    ajax.createItem(this.otopo, itemToCreate, this.cmid).then((itemId) => {\n                        item.id = itemId;\n                        item.degrees.forEach((degree) => {\n                            ajax.createDegree(itemId, degree, this.cmid).then((degreeId) => {\n                                degree.id = degreeId;\n                                return true;\n                            }).catch(Log.error);\n                        });\n                        return true;\n                    }).catch(Log.error);\n                }\n            },\n            addDegree(e) {\n                e.preventDefault();\n                if (!this.hasOtopo) {\n                    store.addDegreeToItem(\n                        this.item,\n                        {\n                            'id': null,\n                            'name': '',\n                            'description': '',\n                            'grade': this.nbr + 1,\n                            'ord': this.item.degrees.length > 0 ? this.item.degrees[this.item.degrees.length - 1].ord + 1 : 0\n                        }\n                    );\n                    ++this.nbr;\n                }\n            },\n            saveItem() {\n                this.validated = true;\n                if (this.$refs.formItem.checkValidity()) {\n                    const item = {...this.item};\n                    delete item.degrees;\n                    if (item.id) {\n                        ajax.editItem(item, this.cmid);\n                    } else {\n                        if (!this.creationPending) {\n                            this.creationPending = true;\n                            delete item.id;\n                            ajax.createItem(this.otopo, item, this.cmid).then((itemId) => {\n                                this.item.id = itemId;\n                                this.creationPending = false;\n                                return true;\n                            }).catch(Log.error);\n                        }\n                    }\n                }\n            },\n            startDrag(evt, index) {\n                if (!this.hasOtopo) {\n                    evt.dataTransfer.dropEffect = 'move';\n                    evt.dataTransfer.effectAllowed = 'move';\n                    evt.dataTransfer.setData('itemIndex', index);\n                    store.startDraggingItem();\n                }\n            },\n            endDrag() {\n                store.stopDraggingItem();\n            },\n            onDrop(evt, before) {\n                evt.preventDefault();\n                if (!this.hasOtopo) {\n                    const itemIndex = parseInt(evt.dataTransfer.getData('itemIndex'));\n                    const testItemIndex = before ? itemIndex + 1 : itemIndex;\n                    const testIndex = before ? this.index : this.index + 1;\n                    if (itemIndex != this.index && testItemIndex != testIndex) {\n                        var deletedItem = store.deleteItem(itemIndex);\n                        deletedItem.ord = before ? this.item.ord : this.item.ord + 1;\n                        var itemsToPersist = store.addItemAfter(this.index, deletedItem);\n                        itemsToPersist.forEach((item) => {\n                            if (item.id) {\n                                var itemToPersist = {...item};\n                                delete itemToPersist.degrees;\n                                ajax.editItem(itemToPersist, this.cmid);\n                            }\n                        });\n                        if (deletedItem.id) {\n                            var deletedItemToPersist = {...deletedItem};\n                            delete deletedItemToPersist.degrees;\n                            ajax.editItem(deletedItemToPersist, this.cmid);\n                        }\n                    }\n                }\n            },\n            onDropDegree(evt) {\n                evt.preventDefault();\n                if (!this.hasOtopo) {\n                    const degreeIndex = parseInt(evt.dataTransfer.getData('degreeIndex'));\n                    const itemIndex = parseInt(evt.dataTransfer.getData('itemIndex'));\n\n                    var deletedDegree = store.deleteDegreeFromItem(this.$root.$data.state.items[itemIndex], degreeIndex);\n                    deletedDegree.ord = 0;\n                    store.addDegreeToItem(this.item, deletedDegree);\n\n                    if (deletedDegree.id) {\n                        ajax.deleteDegree(deletedDegree.id, this.cmid);\n                        var deletedDegreeToCreate = {...deletedDegree};\n                        delete deletedDegreeToCreate.id;\n                        ajax.createDegree(this.item.id, deletedDegreeToCreate, this.cmid).then((degreeId) => {\n                            store.degreeCreated(deletedDegree, degreeId);\n                            return true;\n                        }).catch(Log.error);\n                    }\n                }\n            },\n            collapse(e) {\n                e.preventDefault();\n                this.collapsed = !this.collapsed;\n            }\n        },\n        computed: {\n            isDragging() {\n                return this.state.draggingItem;\n            },\n            isDraggingDegree() {\n                return this.state.draggingDegree;\n            }\n        },\n        template: `\n            <div class=\"item\">\n                <div\n                    class=\"drop-zone\"\n                    v-bind:class=\"{'bg-otopo-light': isDragging}\"\n                    @dragover.prevent\n                    @dragenter.prevent\n                    @drop=\"onDrop($event, true)\">\n                </div>\n                <div\n                    class=\"row border rounded bg-light pt-2\"\n                >\n                    <div\n                        class=\"col-md-12\"\n                        draggable\n                        @dragstart=\"startDrag($event, index)\"\n                        @dragend=\"endDrag\"\n                    >\n                        <a class=\"dropdown-toggle nav-link drag-title\" href=\"#\" v-on:click=\"collapse\">\n                            <i class=\"icon fa fa-arrows\"></i>\n                            <label\n                                class=\"font-weight-bold text-dark\"\n                                :for=\"'item_name_' + index\"\n                            >\n                                {{strings.item}} {{index+1}}\n                            </label>\n                        </a>\n                    </div>\n                    <div class=\"col-md-5\" v-if=\"!collapsed\">\n                        <form ref=\"formItem\" v-bind:class=\"{ 'was-validated': validated }\">\n                        <div class=\"input-group mb-3\">\n                            <input\n                                v-model=\"item.name\"\n                                ref=\"name\"\n                                class=\"form-control\"\n                                type=\"text\"\n                                maxlength=\"255\"\n                                :title=\"strings.stringlimit255\"\n                                :id=\"'item_name_' + index\"\n                                :disabled=\"creationPending\"\n                                @input=\"processChange()\"\n                                required\n                            >\n                        </div>\n                        <label\n                            class=\"font-weight-bold text-dark\"\n                            :for=\"'item_color_' + index\"\n                        >\n                            {{strings.chooseitemcolor}}\n                        </label>\n                        <div class=\"input-group mb-3\" :id=\"'item_color_colorpicker_' + index\">\n                            <ColorPicker\n                                :color=\"item.color\"\n                                v-model=\"item.color\"\n                                :id=\"'item_color_' + index\"\n                                @input=\"processChange()\"\n                                :disabled=\"creationPending\"\n                                required\n                            />\n                        </div>\n                        <button\n                            v-on:click=\"duplicateItem\"\n                            :disabled=\"creationPending || hasOtopo\"\n                            class=\"btn btn-primary mt-2 mb-3\"\n                        >\n                            {{ strings.duplicateitem }}\n                        </button>\n                        <button\n                            v-on:click=\"deleteItem\"\n                            :disabled=\"creationPending || hasOtopo\"\n                            class=\"btn btn-danger mt-2 mb-3\"\n                        >\n                            {{ strings.deleteitem }}\n                        </button>\n                        </form>\n                    </div>\n                    <div class=\"col-md-7\" v-if=\"!collapsed\">\n                        <Degree\n                        v-for=\"(degree, degreeIndex) in item.degrees\"\n                        :key=\"degree.id ? degree.id : 'new_degree' + degreeIndex\"\n                        :item=\"item\"\n                        :degree=\"degree\"\n                        :index=\"degreeIndex\"\n                        :itemIndex=\"index\"\n                        />\n                        <a\n                            v-on:click=\"addDegree\"\n                            :disabled=\"creationPending\"\n                            class=\"mt-2 mb-3 d-inline-block\"\n                            v-bind:class=\"{'disabled': hasOtopo}\"\n                            href=\"#\"\n                        >\n                            + {{ strings.adddegree }}\n                        </a>\n                        <div\n                            v-if=\"item.degrees.length === 0\"\n                            class=\"drop-zone\"\n                            v-bind:class=\"{'bg-otopo-light': isDraggingDegree}\"\n                            @dropover.prevent\n                            @dragenter.prevent\n                            @drop=\"onDropDegree($event)\">\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"drop-zone\"\n                    v-bind:class=\"{'bg-otopo-light': isDragging}\"\n                    @dragover.prevent\n                    @dragenter.prevent\n                    @drop=\"onDrop($event, false)\">\n                </div>\n            </div>\n        `\n    };\n});\n"],"names":["define","store","ajax","Degree","ColorPicker","utils","Log","components","props","otopo","type","Number","item","Object","index","mounted","this","$refs","name","focus","data","nbr","degrees","length","strings","$root","$data","hasOtopo","cmid","processChange","debounce","saveItem","validated","creationPending","collapsed","state","methods","deleteItem","id","duplicateItem","e","preventDefault","forEach","degree","push","ord","addItemAfter","itemToPersist","editItem","itemToCreate","createItem","then","itemId","createDegree","degreeId","catch","error","addDegree","addDegreeToItem","description","grade","formItem","checkValidity","startDrag","evt","dataTransfer","dropEffect","effectAllowed","setData","startDraggingItem","endDrag","stopDraggingItem","onDrop","before","itemIndex","parseInt","getData","testItemIndex","testIndex","deletedItem","deletedItemToPersist","onDropDegree","degreeIndex","deletedDegree","deleteDegreeFromItem","items","deleteDegree","deletedDegreeToCreate","degreeCreated","collapse","computed","isDragging","draggingItem","isDraggingDegree","draggingDegree","template"],"mappings":"AAuBAA,OAAO,kCAAA,CACH,wBACA,uBACA,oCACA,kBACA,kBACA,aACD,SACCC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,MAAO,CACHC,WAAY,CACRJ,OAAUA,EACVC,YAAeA,GAEnBI,MAAO,CACHC,MAAO,CACHC,KAAMC,QAEVC,KAAM,CACFF,KAAMG,QAEVC,MAAO,CACHJ,KAAMC,SAGdI,QAAS,WACLC,KAAKC,MAAMC,KAAKC,OACpB,EACAC,KAAM,WACF,MAAO,CACHC,IAAKL,KAAKJ,KAAKU,QAAQC,OACvBC,QAASR,KAAKS,MAAMC,MAAMF,QAC1BG,SAAUX,KAAKS,MAAMC,MAAMC,SAC3BC,KAAMZ,KAAKS,MAAMC,MAAME,KACvBC,cAAexB,EAAMyB,UAAS,IAAMd,KAAKe,aACzCC,WAAW,EACXC,iBAAiB,EACjBC,WAAW,EACXC,MAAOnB,KAAKS,MAAMC,MAAMS,MAEhC,EACAC,QAAS,CACLC,UAAAA,IACSrB,KAAKW,WACN1B,EAAMoC,WAAWrB,KAAKF,OACtBZ,EAAKmC,WAAWrB,KAAKJ,KAAK0B,GAAItB,KAAKY,MAE3C,EACAW,aAAAA,CAAcC,GAEV,GADAA,EAAEC,kBACGzB,KAAKW,SAAU,CAChB,MAAMf,EAAO,IAAII,KAAKJ,MACtBA,EAAKU,QAAU,GACfN,KAAKJ,KAAKU,QAAQoB,SAASC,IACvB/B,EAAKU,QAAQsB,KAAK,IAAID,cAEnB/B,EAAK0B,GACZ1B,EAAKU,QAAQoB,SAASC,WACXA,EAAOL,EAAAA,MAElB1B,EAAKiC,IACgB5C,EAAM6C,aAAa9B,KAAKF,MAAOF,GACrC8B,SAAS9B,IACpB,GAAIA,EAAK0B,GAAI,CACT,IAAIS,EAAgB,IAAInC,UACjBmC,EAAczB,QACrBpB,EAAK8C,SAASD,EAAe/B,KAAKY,KACtC,KAEJ,MAAMqB,EAAe,IAAIrC,UAClBqC,EAAa3B,QACpBpB,EAAKgD,WAAWlC,KAAKP,MAAOwC,EAAcjC,KAAKY,MAAMuB,MAAMC,IACvDxC,EAAK0B,GAAKc,EACVxC,EAAKU,QAAQoB,SAASC,IAClBzC,EAAKmD,aAAaD,EAAQT,EAAQ3B,KAAKY,MAAMuB,MAAMG,IAC/CX,EAAOL,GAAKgB,GACL,KACRC,MAAMjD,EAAIkD,MAAK,KAEf,KACRD,MAAMjD,EAAIkD,MACjB,CACJ,EACAC,SAAAA,CAAUjB,GACNA,EAAEC,kBACGzB,KAAKW,WACN1B,EAAMyD,gBACF1C,KAAKJ,KACL,CACI0B,GAAM,KACNpB,KAAQ,GACRyC,YAAe,GACfC,MAAS5C,KAAKK,IAAM,EACpBwB,IAAO7B,KAAKJ,KAAKU,QAAQC,OAAS,EAAIP,KAAKJ,KAAKU,QAAQN,KAAKJ,KAAKU,QAAQC,OAAS,GAAGsB,IAAM,EAAI,MAGtG7B,KAAKK,IAEf,EACAU,QAAAA,GAEI,GADAf,KAAKgB,WAAY,EACbhB,KAAKC,MAAM4C,SAASC,gBAAiB,CACrC,MAAMlD,EAAO,IAAII,KAAKJ,aACfA,EAAKU,QACRV,EAAK0B,GACLpC,EAAK8C,SAASpC,EAAMI,KAAKY,OAEpBZ,KAAKiB,kBACNjB,KAAKiB,iBAAkB,SAChBrB,EAAK0B,GACZpC,EAAKgD,WAAWlC,KAAKP,MAAOG,EAAMI,KAAKY,MAAMuB,MAAMC,IAC/CpC,KAAKJ,KAAK0B,GAAKc,EACfpC,KAAKiB,iBAAkB,GAChB,KACRsB,MAAMjD,EAAIkD,OAGzB,CACJ,EACAO,SAAAA,CAAUC,EAAKlD,IACNE,KAAKW,WACNqC,EAAIC,aAAaC,WAAa,OAC9BF,EAAIC,aAAaE,cAAgB,OACjCH,EAAIC,aAAaG,QAAQ,YAAatD,GACtCb,EAAMoE,oBAEd,EACAC,OAAAA,GACIrE,EAAMsE,kBACV,EACAC,MAAAA,CAAOR,EAAKS,GAER,GADAT,EAAIvB,kBACCzB,KAAKW,SAAU,CAChB,MAAM+C,EAAYC,SAASX,EAAIC,aAAaW,QAAQ,cAC9CC,EAAgBJ,EAASC,EAAY,EAAIA,EACzCI,EAAYL,EAASzD,KAAKF,MAAQE,KAAKF,MAAQ,EACrD,GAAI4D,GAAa1D,KAAKF,OAAS+D,GAAiBC,EAAW,CACvD,IAAIC,EAAc9E,EAAMoC,WAAWqC,GAUnC,GATAK,EAAYlC,IAAM4B,EAASzD,KAAKJ,KAAKiC,IAAM7B,KAAKJ,KAAKiC,IAAM,EACtC5C,EAAM6C,aAAa9B,KAAKF,MAAOiE,GACrCrC,SAAS9B,IACpB,GAAIA,EAAK0B,GAAI,CACT,IAAIS,EAAgB,IAAInC,UACjBmC,EAAczB,QACrBpB,EAAK8C,SAASD,EAAe/B,KAAKY,KACtC,KAEAmD,EAAYzC,GAAI,CAChB,IAAI0C,EAAuB,IAAID,UACxBC,EAAqB1D,QAC5BpB,EAAK8C,SAASgC,EAAsBhE,KAAKY,KAC7C,CACJ,CACJ,CACJ,EACAqD,YAAAA,CAAajB,GAET,GADAA,EAAIvB,kBACCzB,KAAKW,SAAU,CAChB,MAAMuD,EAAcP,SAASX,EAAIC,aAAaW,QAAQ,gBAChDF,EAAYC,SAASX,EAAIC,aAAaW,QAAQ,cAEpD,IAAIO,EAAgBlF,EAAMmF,qBAAqBpE,KAAKS,MAAMC,MAAMS,MAAMkD,MAAMX,GAAYQ,GAIxF,GAHAC,EAActC,IAAM,EACpB5C,EAAMyD,gBAAgB1C,KAAKJ,KAAMuE,GAE7BA,EAAc7C,GAAI,CAClBpC,EAAKoF,aAAaH,EAAc7C,GAAItB,KAAKY,MACzC,IAAI2D,EAAwB,IAAIJ,UACzBI,EAAsBjD,GAC7BpC,EAAKmD,aAAarC,KAAKJ,KAAK0B,GAAIiD,EAAuBvE,KAAKY,MAAMuB,MAAMG,IACpErD,EAAMuF,cAAcL,EAAe7B,IAC5B,KACRC,MAAMjD,EAAIkD,MACjB,CACJ,CACJ,EACAiC,QAAAA,CAASjD,GACLA,EAAEC,iBACFzB,KAAKkB,WAAalB,KAAKkB,SAC3B,GAEJwD,SAAU,CACNC,UAAAA,GACI,OAAW3E,KAACmB,MAAMyD,YACtB,EACAC,gBAAAA,GACI,OAAW7E,KAACmB,MAAM2D,cACtB,GAEJC,SAAU,ylKAkHlB"}