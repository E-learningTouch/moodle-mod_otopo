define("mod_otopo/color",["vuecolor"],(function(e){return{components:{"chrome-picker":e.Chrome},template:'\n            <div class="input-group color-picker" ref="colorpicker">\n            <input type="text" :name="name" class="form-control" v-model="colorValue" @focus="showPicker()"\n                @input="updateFromInput"\n            />\n            <span class="input-group-append color-picker-container">\n                <span class="current-color input-group-text" :style="\'background-color: \' + colorValue"\n                    @click="togglePicker()"\n                ></span>\n                <chrome-picker :value="colors" @input="updateFromPicker" v-if="displayPicker" />\n            </span>\n            </div>\n        ',props:["color","name"],data:function(){return{colors:{hex:"#000000"},colorValue:"",displayPicker:!1,firstCall:!0}},mounted:function(){this.setColor(this.color||"#000000")},methods:{setColor(e){this.updateColors(e),this.colorValue=e},updateColors(e){var o=Math.pow;if("#"==e.slice(0,1))this.colors={hex:e};else if("rgba"==e.slice(0,4)){var r=e.replace(/^rgba?\(|\s+|\)$/g,"").split(","),t="#"+(1*o(2,24)+parseInt(r[0])*o(2,16)+parseInt(r[1])*o(2,8)+parseInt(r[2])).toString(16).slice(1);this.colors={hex:t,a:r[3]}}},showPicker(){document.addEventListener("click",this.documentClick),this.displayPicker=!0},hidePicker(){document.removeEventListener("click",this.documentClick),this.displayPicker=!1},togglePicker(){this.displayPicker?this.hidePicker():this.showPicker()},updateFromInput(){this.updateColors(this.colorValue)},updateFromPicker(e){this.colors=e,this.colorValue=1==e.rgba.a?e.hex:"rgba("+e.rgba.r+", "+e.rgba.g+", "+e.rgba.b+", "+e.rgba.a+")"},documentClick(e){var o=this.$refs.colorpicker,r=e.target;o!==r&&!o.contains(r)&&this.hidePicker()}},watch:{colorValue(e){e&&(this.updateColors(e),!this.firstCall&&this.$emit("input",e),this.firstCall=!1)}}}}));

//# sourceMappingURL=color.min.js.map